#!/bin/sh

#
# Copyright (c) 2016, Henning Matyschok
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

echo "*** Loading configuration files .."

cfg_load

. /etc/rc.conf

FUNCS_ONLY=1 . /etc/rc.subr

_rc_sysctl_conf

echo "*** Populating /var .."

mkdir -p /var/run/ppp
mkdir -p /var/run/rc.d
mkdir -p /var/log
mkdir -p /var/tmp
mkdir -p /var/db
mkdir -p /var/empty

echo "*** Generating password/login databases .."

/usr/sbin/pwd_mkdb /etc/master.passwd > /dev/null 2>&1
/usr/bin/cap_mkdb /etc/login.conf > /dev/null 2>&1

echo "*** Generating services database .."
/usr/sbin/services_mkdb /etc/services > /dev/null 2>&1

echo "*** Starting network .."

# Hostname shall set by parsing
# 
#  /etc/myname
# 
if [ -f /etc/myname ]; then
	hostname=`stripcom /etc/myname`
	hostname ${hostname}
else
	hostname=`hostname`
fi

# Set the address for the loopback interface.  Bringing the interface up,
# automatically invokes the IPv6 address ::1.
ifconfig lo0 inet 127.0.0.1/8

if ifconfig lo0 inet6 >/dev/null 2>&1; then
# IPv6 configurations.
	ip6kernel=YES

# Disallow link-local unicast dest without outgoing scope identifiers.
	route -qn add -inet6 fe80:: -prefixlen 10 ::1 -reject > /dev/null

# Disallow site-local unicast dest without outgoing scope identifiers.
# If you configure site-locals without scope id (it is permissible
# config for routers that are not on scope boundary), you may want
# to comment the line out.
	route -qn add -inet6 fec0:: -prefixlen 10 ::1 -reject > /dev/null

# Disallow "internal" addresses to appear on the wire.
	route -qn add -inet6 ::ffff:0.0.0.0 -prefixlen 96 ::1 -reject > /dev/null

# Disallow packets to malicious IPv4 compatible prefix.
	route -qn add -inet6 ::224.0.0.0 -prefixlen 100 ::1 -reject > /dev/null
	route -qn add -inet6 ::127.0.0.0 -prefixlen 104 ::1 -reject > /dev/null
	route -qn add -inet6 ::0.0.0.0 -prefixlen 104 ::1 -reject > /dev/null
	route -qn add -inet6 ::255.0.0.0 -prefixlen 104 ::1 -reject > /dev/null

# Disallow packets to malicious 6to4 prefix.
	route -qn add -inet6 2002:e000:: -prefixlen 20 ::1 -reject > /dev/null
	route -qn add -inet6 2002:7f00:: -prefixlen 24 ::1 -reject > /dev/null
	route -qn add -inet6 2002:0000:: -prefixlen 24 ::1 -reject > /dev/null
	route -qn add -inet6 2002:ff00:: -prefixlen 24 ::1 -reject > /dev/null

# Disallow packets without scope identifier.
	route -qn add -inet6 ff01:: -prefixlen 16 ::1 -reject > /dev/null
	route -qn add -inet6 ff02:: -prefixlen 16 ::1 -reject > /dev/null

# Completely disallow packets to IPv4 compatible prefix.
# This may conflict with RFC1933 under following circumstances:
# (1) An IPv6-only KAME node tries to originate packets to IPv4
#     compatible destination.  The KAME node has no IPv4 compatible
#     support.  Under RFC1933, it should transmit native IPv6
#     packets toward IPv4 compatible destination, hoping it would
#     reach a router that forwards the packet toward auto-tunnel
#     interface.
# (2) An IPv6-only node originates a packet to an IPv4 compatible
#     destination.  A KAME node is acting as an IPv6 router, and
#     asked to forward it.
# Due to rare use of IPv4 compatible addresses, and security issues
# with it, we disable it by default.
	route -qn add -inet6 ::0.0.0.0 -prefixlen 96 ::1 -reject > /dev/null
else
	ip6kernel=NO
fi

# 
# Configure interfaces.
#
# Any configuration targeting interfaces on 
# interface- / link-layer is described by
# 
#  /etc/hostname.if
# 
# configuration file, where its contents provides 
# argument vector for processing by ifconfig(8).
#
for ift in ${network_interface_types}; do
	_rc_ifmstart ${ift}
done

echo "*** Starting daemons .."

_rc_parse_conf

echo "*** Done!"

exit 0
